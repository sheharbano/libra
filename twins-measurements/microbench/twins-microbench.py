import statistics as st
import datetime
import matplotlib.pyplot as plt
import os
import re

# Baseline values
DEFAULT_NODES, DEFAULT_PARTITIONS, DEFAULT_ROUNDS = 4, 2, 4

# Data
generator_2_partitions = {
    'rounds':  {
        4: {
            'y-filter': {
                2: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                3: [4, 3, 4, 4, 4, 4, 4, 4, 4, 4],
                4: [9, 1, 12, 12, 11, 12, 11, 12, 13, 11],
                5: [25, 27, 27, 28, 26, 26, 28, 27, 27, 28],
                6: [44, 53, 54, 60, 53, 56, 52, 51, 57, 57],
                7: [80, 112, 81, 88, 91, 92, 94, 91, 90, 95],
                8: [146, 171, 148, 146, 145, 145, 150, 143, 147, 141],
                9: [210, 224, 228, 227, 223, 219, 219, 227, 221, 221],
                10: [416, 417, 345, 337, 340, 339, 343, 339, 353, 343],
            }
        },
        7: {
            'y-filter': {
                2: [8, 8, 8, 7, 8, 8, 7, 7, 8, 8],
                3: [108, 106, 108, 112, 134, 104, 112, 115, 119, 115],
                4: [855, 767, 778, 795, 762, 756, 773, 783, 905, 834],
                5: [3586, 3877, 3820, 3760, 3669, 3638, 4040, 3837, 3731, 3718],
                6: [13934, 15805, 13704, 14508, 14175, 14076, 13299, 13347, 13040, 13685],
                7: [39647, 39152, 38604, 38305, 38701, 38903, 38678, 38687, 38687, 38407],
                8: [103837, 100034, 108484, 107035, 108280, 109815, 108841, 110066, 108123, 107387],
                9: [229165, 223406, 226161, 226557, 224723, 224045, 223387, 224096, 222327, 227137],
                10: [477409, 488079, 488091, 480042, 489703, 491356, 496046, 506904, 542544, 529851],
            }
        }
    }
}
generator_3_partitions = {
    'rounds':  {
        4: {
            'y-filter': {
                2: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                3: [4, 4, 4, 4, 4, 4, 4, 4, 5, 5],
                4: [11, 11, 11, 10, 10, 11, 11, 11, 10, 11],
                5: [25, 24, 24, 24, 25, 25, 28, 27, 27, 27],
                6: [48, 56, 66, 59, 55, 53, 54, 53, 51, 56],
                7: [93, 85, 87, 83, 143, 87, 106, 92, 93, 92],
                8: [160, 159, 174, 146, 142, 140, 149, 158, 159, 153],
                9: [278, 258, 360, 264, 260, 241, 255, 248, 254, 255],
                10: [348, 366, 351, 345, 411, 347, 357, 367, 508, 384],
            }
        },
        7: {
            'y-filter': {
                2: [9, 8, 9, 9, 9, 9, 8, 8, 8, 8],
                3: [122, 120, 122, 138, 119, 120, 121, 120, 119, 118],
                4: [969, 897, 852, 1055, 800, 869, 859, 959, 851, 864],
                5: [3905, 3807, 3929, 4414, 4079, 4088, 4451, 4250, 4328, 4625],
                6: [15206, 14909, 15237, 14983, 15066, 15129, 15733, 14964, 14741, 14899],
                7: [43259, 43980, 49320, 45038, 44150, 44089, 43346, 41953, 45008, 43132],
                8: [108464, 105605, 111587, 109951, 106440, 107512, 110668, 105591, 112270, 105917],
                9: [264800, 261873, 270601, 264633, 246639, 248081, 241704, 244496, 239033, 238059],
                10: [535054, 519090, 508334, 501784, 513417, 506046, 536383, 523540, 511155, 510506],
            }
        }
    }
}
executor_2_partitions = {
    'nodes':  {
        4: {
            'rounds': {
                4: [1061, 159, 157, 189, 172, 178, 267, 297, 235, 208, 185, 167, 168, 200, 190, 195, 209, 169, 204, 200, 185, 176, 169, 174, 185, 212, 219, 169, 170, 201, 214, 223, 204, 234, 225, 261, 197, 207, 226, 234, 277, 240, 182, 177, 200, 160, 173, 170, 169, 191, 196, 194, 173, 161, 183, 198, 204, 168, 184, 172, 187, 217, 180, 209, 181, 194, 192, 192, 182, 194, 182, 180, 183, 173, 180, 174, 186, 213, 203, 3211, 204, 232, 205, 204, 237, 228, 218, 208, 215, 243, 235, 210, 207, 181, 197, 190, 218, 228, 299, 255],
                5: [1070, 202, 178, 206, 196, 193, 211, 216, 214, 216, 212, 195, 220, 241, 248, 221, 203, 238, 203, 251, 221, 206, 224, 221, 249, 217, 251, 224, 225, 215, 207, 256, 221, 209, 216, 254, 254, 230, 242, 268, 227, 229, 228, 242, 217, 250, 254, 281, 240, 238, 245, 256, 219, 236, 215, 214, 241, 228, 260, 220, 266, 235, 235, 245, 284, 239, 267, 212, 267, 239, 248, 244, 276, 251, 253, 268, 274, 267, 243, 261, 257, 260, 243, 282, 277, 293, 272, 273, 252, 283, 261, 274, 288, 232, 238, 277, 293, 265, 314, 276],
                6: [1073, 216, 236, 230, 223, 258, 213, 230, 244, 249, 225, 243, 259, 264, 257, 229, 239, 240, 267, 233, 261, 274, 228, 243, 264, 260, 244, 238, 273, 298, 267, 279, 234, 288, 222, 289, 265, 282, 251, 288, 281, 238, 244, 251, 273, 222, 234, 264, 271, 229, 272, 325, 314, 253, 292, 261, 283, 266, 264, 289, 259, 308, 304, 286, 272, 273, 299, 255, 329, 287, 282, 275, 309, 318, 276, 314, 303, 349, 362, 323, 258, 313, 288, 302, 265, 300, 369, 273, 308, 319, 275, 372, 342, 304, 376, 343, 277, 303, 309, 312],
                7: [1113, 250, 251, 247, 259, 262, 247, 258, 278, 275, 247, 285, 280, 274, 263, 302, 288, 291, 271, 276, 293, 292, 320, 319, 255, 271, 262, 339, 285, 250, 277, 266, 257, 251, 249, 282, 257, 258, 251, 271, 322, 311, 273, 270, 274, 299, 302, 299, 269, 289, 291, 301, 304, 331, 361, 313, 382, 301, 292, 300, 274, 294, 339, 297, 304, 279, 267, 275, 267, 267, 294, 270, 260, 274, 275, 270, 305, 277, 309, 280, 298, 310, 301, 286, 272, 307, 290, 297, 292, 286, 317, 337, 330, 307, 293, 306, 297, 308, 303, 346],
                8: [2393, 311, 316, 287, 283, 293, 288, 291, 304, 283, 311, 293, 294, 286, 293, 288, 309, 375, 306, 300, 283, 316, 279, 276, 318, 315, 309, 318, 308, 298, 282, 296, 313, 270, 316, 308, 331, 302, 324, 305, 304, 308, 318, 311, 305, 307, 287, 321, 286, 291, 301, 320, 312, 322, 302, 291, 298, 294, 297, 315, 302, 317, 314, 331, 333, 306, 338, 377, 321, 338, 317, 309, 343, 323, 326, 316, 330, 300, 295, 299, 316, 308, 332, 326, 326, 313, 323, 324, 332, 326, 327, 331, 350, 357, 340, 335, 371, 375, 373, 340],
                9: [2073, 333, 322, 324, 348, 325, 321, 299, 322, 323, 312, 305, 316, 328, 328, 339, 353, 319, 331, 358, 303, 318, 327, 307, 335, 318, 320, 312, 303, 393, 364, 350, 342, 370, 397, 386, 367, 319, 316, 332, 329, 343, 355, 318, 346, 335, 358, 348, 353, 316, 331, 341, 308, 369, 317, 311, 383, 335, 329, 404, 409, 468, 393, 339, 350, 328, 357, 349, 367, 362, 349, 360, 335, 337, 354, 370, 343, 353, 330, 355, 330, 352, 338, 341, 368, 345, 344, 370, 338, 411, 375, 365, 419, 348, 372, 394, 344, 346, 350, 355],
                10: [2578, 337, 341, 347, 352, 357, 360, 375, 360, 348, 357, 365, 412, 422, 336, 322, 353, 368, 337, 379, 332, 381, 410, 378, 411, 359, 369, 351, 334, 440, 369, 374, 350, 376, 347, 353, 348, 348, 358, 407, 403, 473, 361, 350, 374, 364, 399, 365, 369, 393, 379, 383, 398, 374, 361, 381, 361, 368, 348, 366, 354, 360, 381, 356, 388, 355, 359, 388, 388, 352, 370, 367, 381, 424, 368, 428, 409, 407, 385, 375, 415, 394, 388, 390, 398, 383, 435, 404, 385, 417, 381, 421, 437, 362, 388, 359, 361, 352, 407, 406],
                11: [2049, 371, 362, 377, 387, 391, 382, 407, 406, 385, 374, 393, 382, 373, 379, 376, 385, 381, 378, 421, 398, 410, 383, 385, 405, 447, 426, 369, 368, 375, 398, 422, 367, 444, 473, 406, 409, 380, 383, 364, 467, 399, 387, 420, 389, 429, 391, 400, 410, 381, 439, 405, 378, 382, 386, 470, 418, 415, 420, 388, 427, 408, 395, 403, 398, 465, 438, 453, 444, 421, 408, 408, 465, 426, 474, 439, 429, 436, 428, 532, 410, 523, 479, 547, 454, 497, 488, 491, 448, 437, 514, 484, 405, 427, 419, 391, 385, 415, 404, 415],
                12: [2182, 427, 433, 407, 400, 439, 413, 470, 427, 407, 450, 410, 406, 412, 435, 400, 421, 400, 389, 404, 376, 395, 393, 415, 418, 471, 445, 394, 437, 404, 422, 468, 439, 448, 420, 420, 436, 424, 427, 441, 436, 415, 419, 424, 447, 406, 427, 430, 423, 429, 423, 440, 455, 442, 441, 482, 465, 442, 454, 442, 474, 441, 481, 441, 452, 463, 447, 476, 443, 459, 475, 475, 471, 442, 438, 442, 499, 454, 454, 473, 462, 443, 464, 486, 435, 440, 431, 434, 460, 440, 623, 487, 612, 452, 505, 499, 593, 620, 480, 518],
            }
        },
        7: {
            'rounds': {
                4: [226, 232, 238, 248, 242, 238, 238, 246, 246, 243, 258, 253, 257, 256, 257, 259, 271, 258, 262, 270, 268, 268, 272, 268, 272, 275, 318, 301, 305, 301, 303, 327, 318, 301, 301, 294, 299, 306, 2227, 284, 287, 291, 300, 293, 294, 295, 300, 297, 305, 315, 323, 317, 337, 372, 339, 357, 348, 343, 350, 347, 359, 356, 351, 361, 351, 358, 366, 363, 374, 484, 383, 388, 7132, 347, 347, 348, 348, 355, 372, 7096, 299, 303, 309, 288, 287, 296, 364, 291, 295, 310, 408, 300, 304, 340, 8847, 272, 267, 278, 280, 283],
                5: [1079, 283, 289, 292, 285, 285, 286, 289, 290, 300, 301, 295, 306, 304, 301, 302, 310, 306, 324, 305, 312, 307, 308, 309, 320, 357, 334, 1440, 347, 331, 322, 320, 335, 344, 332, 340, 340, 337, 346, 342, 349, 351, 355, 367, 358, 374, 356, 357, 362, 364, 369, 374, 382, 454, 409, 405, 418, 413, 417, 410, 422, 373, 3893, 386, 384, 388, 388, 401, 395, 526, 444, 482, 465, 440, 448, 451, 422, 419, 521, 7091, 375, 408, 395, 391, 382, 383, 7786, 345, 352, 345, 371, 340, 353, 354, 346, 350, 355, 341, 342, 341],
                6: [1086, 355, 343, 346, 357, 329, 342, 336, 336, 347, 341, 345, 349, 354, 350, 360, 368, 457, 413, 364, 366, 368, 368, 369, 374, 370, 436, 421, 409, 383, 383, 388, 384, 395, 384, 381, 387, 385, 394, 391, 400, 400, 402, 398, 406, 400, 420, 424, 421, 421, 428, 491, 451, 456, 430, 436, 1553, 435, 438, 422, 457, 456, 461, 451, 450, 464, 477, 476, 472, 497, 506, 578, 506, 487, 468, 534, 517, 509, 520, 4020, 532, 557, 1156, 441, 7486, 427, 417, 427, 503, 470, 467, 437, 474, 435, 474, 451, 445, 479, 433, 435],
                7: [1085, 382, 372, 374, 378, 380, 375, 382, 380, 375, 388, 426, 407, 416, 409, 415, 419, 414, 427, 414, 457, 433, 414, 462, 447, 428, 426, 441, 443, 443, 444, 448, 464, 469, 457, 473, 500, 478, 469, 480, 533, 479, 464, 454, 480, 474, 501, 501, 515, 530, 518, 536, 517, 533, 496, 502, 533, 462, 561, 509, 537, 538, 543, 500, 477, 483, 486, 496, 496, 490, 511, 549, 565, 514, 508, 511, 521, 544, 547, 2283, 442, 467, 434, 424, 504, 438, 458, 411, 7745, 459, 402, 420, 427, 413, 421, 433, 416, 444, 405, 469],
                8: [1082, 413, 419, 437, 418, 435, 425, 472, 460, 450, 459, 452, 461, 466, 465, 455, 469, 477, 464, 456, 473, 478, 474, 486, 486, 495, 498, 480, 514, 552, 532, 508, 515, 534, 536, 511, 525, 523, 542, 534, 558, 536, 547, 544, 488, 589, 537, 518, 538, 580, 634, 539, 521, 537, 529, 560, 578, 583, 581, 571, 596, 575, 608, 580, 621, 603, 723, 597, 629, 579, 552, 536, 604, 540, 557, 543, 638, 590, 570, 590, 609, 574, 573, 565, 584, 604, 7556, 489, 482, 539, 490, 552, 497, 618, 536, 544, 503, 582, 519, 4578],
                9: [1091, 424, 464, 466, 463, 486, 480, 489, 478, 478, 497, 493, 512, 557, 556, 491, 510, 502, 501, 500, 464, 515, 518, 528, 525, 570, 544, 573, 496, 566, 551, 541, 542, 540, 559, 558, 530, 575, 548, 532, 536, 556, 542, 548, 570, 603, 633, 513, 534, 574, 567, 568, 555, 574, 588, 602, 573, 622, 622, 592, 622, 598, 632, 689, 676, 694, 837, 679, 579, 602, 549, 592, 546, 587, 613, 589, 567, 593, 603, 2598, 608, 593, 580, 571, 525, 574, 594, 573, 560, 545, 5630, 1533, 555, 530, 539, 538, 539, 536, 558, 526],
                10: [1091, 466, 472, 471, 524, 468, 467, 478, 470, 485, 516, 500, 499, 511, 503, 525, 547, 566, 529, 515, 522, 524, 537, 551, 537, 527, 536, 528, 524, 536, 582, 548, 549, 536, 619, 598, 584, 588, 584, 628, 570, 632, 646, 675, 582, 623, 694, 589, 578, 648, 723, 633, 616, 596, 588, 606, 597, 643, 581, 626, 581, 606, 587, 600, 583, 601, 633, 727, 656, 633, 661, 604, 607, 593, 604, 581, 602, 589, 655, 2565, 659, 641, 593, 607, 608, 611, 565, 568, 552, 5562, 641, 575, 575, 566, 571, 609, 557, 571, 575, 625],
                11: [1356, 527, 536, 548, 526, 550, 517, 540, 527, 568, 529, 559, 570, 577, 555, 596, 659, 629, 596, 597, 576, 596, 585, 563, 608, 609, 659, 601, 615, 622, 610, 615, 625, 617, 677, 633, 648, 715, 849, 1026, 748, 667, 644, 645, 638, 672, 673, 645, 706, 698, 664, 662, 680, 650, 666, 648, 652, 688, 671, 630, 668, 677, 633, 654, 654, 655, 826, 681, 681, 692, 674, 613, 625, 613, 656, 610, 608, 620, 634, 4608, 580, 616, 635, 642, 619, 580, 642, 611, 672, 609, 638, 4644, 626, 590, 575, 595, 627, 619, 599, 570],
                12: [1115, 567, 564, 568, 578, 616, 663, 609, 629, 665, 612, 603, 596, 630, 631, 606, 637, 654, 595, 610, 598, 665, 665, 677, 728, 699, 676, 661, 649, 657, 673, 666, 661, 691, 700, 719, 688, 737, 797, 746, 719, 768, 753, 741, 718, 764, 771, 718, 732, 848, 920, 880, 901, 847, 698, 797, 771, 764, 691, 773, 728, 702, 722, 769, 752, 724, 766, 798, 757, 767, 717, 783, 659, 714, 729, 772, 768, 783, 695, 977, 881, 747, 775, 734, 1034, 2742, 861, 772, 703, 732, 847, 751, 776, 886, 792, 810, 745, 648, 696, 703],
            }
        }
    }
}
executor_3_partitions = {
    'nodes':  {
        4: {
            'rounds': {
                4: [1054, 154, 150, 156, 175, 152, 181, 148, 152, 148, 178, 150, 160, 157, 157, 149, 155, 154, 153, 172, 200, 202, 204, 199, 180, 188, 161, 157, 159, 162, 188, 157, 183, 254, 315, 179, 170, 268, 193, 180, 207, 227, 234, 194, 201, 174, 197, 214, 191, 184, 215, 258, 220, 222, 245, 193, 185, 218, 222, 192, 190, 198, 194, 217, 190, 190, 212, 193, 227, 219, 204, 182, 236, 195, 200, 212, 166, 149, 164, 246, 208, 202, 224, 262, 204, 185, 185, 197, 213, 171, 164, 201, 223, 207, 177, 173, 201, 177, 194, 165],
                5: [1064, 189, 190, 216, 184, 186, 203, 211, 190, 182, 186, 215, 198, 207, 187, 185, 183, 214, 194, 210, 210, 203, 188, 202, 248, 240, 240, 191, 219, 216, 209, 200, 231, 214, 205, 223, 237, 203, 220, 215, 227, 212, 240, 204, 220, 209, 252, 214, 222, 200, 194, 197, 210, 225, 225, 233, 224, 234, 253, 215, 229, 241, 233, 233, 270, 245, 275, 266, 263, 243, 223, 217, 246, 219, 217, 223, 222, 238, 243, 236, 292, 244, 295, 247, 281, 280, 258, 290, 266, 273, 290, 302, 289, 282, 274, 314, 258, 268, 271, 263],
                6: [1617, 224, 215, 233, 238, 211, 233, 236, 240, 213, 209, 223, 223, 244, 251, 222, 218, 237, 217, 238, 291, 253, 228, 248, 254, 215, 247, 225, 211, 251, 249, 238, 215, 228, 239, 222, 226, 253, 223, 239, 261, 229, 230, 252, 236, 230, 233, 245, 240, 264, 243, 274, 264, 245, 252, 270, 251, 277, 253, 235, 276, 312, 309, 283, 255, 241, 245, 237, 250, 272, 255, 277, 255, 270, 252, 261, 284, 294, 286, 274, 253, 271, 263, 284, 291, 274, 269, 286, 266, 252, 270, 262, 255, 257, 261, 257, 277, 262, 295, 288],
                7: [2047, 241, 265, 268, 248, 250, 241, 238, 262, 251, 250, 271, 267, 279, 246, 247, 247, 266, 252, 274, 285, 249, 251, 248, 261, 274, 277, 254, 250, 266, 249, 256, 261, 257, 263, 277, 263, 261, 269, 286, 288, 264, 257, 269, 257, 269, 307, 310, 301, 290, 281, 259, 296, 295, 296, 271, 316, 263, 273, 308, 263, 274, 291, 284, 311, 281, 299, 296, 282, 304, 291, 262, 300, 269, 305, 299, 265, 281, 270, 308, 297, 328, 318, 322, 319, 291, 322, 296, 292, 341, 312, 290, 282, 292, 291, 291, 312, 349, 319, 432],
                8: [2059, 319, 306, 292, 303, 280, 284, 294, 309, 297, 317, 290, 312, 291, 319, 271, 310, 343, 350, 298, 281, 334, 267, 327, 318, 270, 300, 282, 317, 279, 303, 304, 311, 311, 360, 301, 326, 339, 307, 342, 300, 307, 298, 327, 319, 286, 292, 305, 291, 321, 299, 299, 340, 300, 294, 320, 318, 314, 293, 327, 321, 327, 312, 350, 307, 304, 349, 298, 365, 374, 327, 348, 359, 317, 337, 328, 333, 337, 324, 310, 320, 328, 312, 332, 352, 319, 365, 350, 331, 332, 371, 352, 340, 331, 325, 373, 329, 359, 416, 372],
                9: [2068, 315, 296, 305, 316, 316, 324, 331, 330, 315, 302, 326, 326, 320, 309, 317, 293, 306, 292, 300, 295, 298, 299, 328, 304, 304, 300, 329, 334, 303, 333, 307, 316, 311, 306, 347, 304, 341, 326, 323, 347, 321, 317, 343, 349, 321, 357, 336, 311, 344, 348, 322, 350, 324, 362, 333, 339, 343, 351, 371, 351, 336, 346, 337, 362, 329, 343, 380, 351, 369, 370, 362, 329, 343, 352, 346, 333, 332, 356, 359, 339, 345, 335, 339, 343, 420, 400, 350, 378, 345, 367, 336, 343, 335, 375, 421, 385, 375, 390, 361],
                10: [2580, 339, 337, 333, 319, 315, 323, 323, 329, 335, 328, 320, 339, 345, 348, 322, 350, 354, 327, 353, 351, 332, 341, 374, 364, 357, 390, 380, 395, 348, 370, 338, 363, 332, 369, 344, 348, 378, 350, 353, 369, 371, 352, 355, 347, 350, 384, 395, 372, 364, 377, 401, 426, 473, 377, 375, 380, 400, 386, 368, 386, 362, 393, 388, 369, 363, 379, 376, 382, 376, 413, 414, 375, 405, 361, 393, 387, 394, 420, 427, 431, 426, 410, 383, 383, 413, 402, 390, 371, 369, 381, 410, 377, 385, 374, 370, 371, 365, 395, 374],
                11: [2063, 370, 402, 371, 405, 384, 379, 386, 374, 403, 381, 377, 401, 382, 370, 388, 373, 426, 387, 404, 481, 458, 363, 348, 376, 354, 360, 366, 380, 381, 371, 386, 369, 393, 352, 374, 394, 382, 372, 372, 358, 395, 370, 444, 393, 405, 412, 381, 392, 412, 390, 383, 409, 380, 416, 381, 389, 400, 400, 410, 393, 415, 384, 385, 392, 401, 416, 383, 432, 421, 397, 414, 441, 458, 400, 413, 428, 398, 404, 419, 399, 423, 421, 398, 431, 399, 417, 424, 442, 441, 518, 394, 454, 414, 449, 452, 427, 428, 438, 447],
                12: [3055, 389, 398, 433, 407, 395, 410, 430, 446, 445, 408, 432, 419, 412, 384, 437, 445, 431, 433, 412, 409, 391, 373, 422, 413, 389, 394, 427, 429, 417, 447, 431, 424, 439, 420, 408, 402, 405, 388, 398, 435, 411, 416, 413, 403, 420, 414, 410, 426, 441, 430, 446, 436, 434, 540, 466, 464, 446, 446, 449, 451, 419, 442, 452, 437, 421, 412, 428, 465, 429, 459, 423, 432, 435, 508, 441, 461, 501, 476, 456, 454, 430, 440, 430, 463, 439, 464, 447, 437, 434, 441, 455, 432, 441, 449, 441, 485, 485, 441, 426],
            }
        },
        7: {
            'rounds': {
                4: [1085, 254, 264, 242, 254, 266, 278, 242, 282, 277, 279, 257, 293, 284, 261, 278, 295, 316, 379, 367, 331, 323, 308, 355, 289, 312, 336, 296, 328, 333, 286, 342, 341, 298, 364, 373, 312, 366, 372, 323, 361, 363, 331, 352, 358, 392, 397, 344, 421, 437, 450, 339, 373, 466, 418, 460, 479, 447, 473, 403, 462, 398, 453, 334, 310, 344, 346, 310, 356, 348, 334, 369, 343, 416, 404, 408, 558, 419, 424, 2961, 14169, 400, 295, 301, 313, 398, 4945, 274, 272, 278, 299, 281, 272, 293, 366, 275, 279, 289, 299, 287],
                5: [1074, 291, 292, 291, 293, 292, 295, 293, 306, 300, 302, 304, 308, 309, 311, 316, 358, 339, 333, 358, 328, 331, 326, 331, 346, 338, 336, 336, 359, 340, 347, 349, 353, 346, 350, 354, 353, 358, 378, 334, 345, 346, 355, 354, 354, 419, 388, 374, 386, 396, 394, 390, 383, 383, 388, 392, 390, 403, 504, 415, 414, 385, 388, 391, 397, 391, 399, 404, 410, 413, 418, 425, 464, 457, 464, 444, 445, 452, 439, 13548, 370, 374, 395, 7095, 323, 310, 314, 318, 361, 314, 333, 350, 343, 343, 349, 336, 342, 373, 344, 345],
                6: [1071, 333, 335, 340, 333, 339, 332, 337, 330, 336, 342, 343, 350, 350, 352, 356, 393, 394, 369, 391, 379, 381, 400, 348, 374, 381, 374, 391, 385, 408, 379, 387, 396, 407, 404, 394, 394, 402, 399, 404, 409, 407, 460, 430, 453, 465, 527, 432, 431, 422, 407, 411, 410, 406, 417, 422, 420, 427, 432, 435, 453, 471, 472, 477, 487, 494, 462, 533, 559, 551, 493, 480, 511, 479, 490, 496, 496, 503, 524, 7145, 436, 431, 420, 607, 7122, 437, 385, 425, 406, 545, 568, 436, 493, 409, 418, 414, 417, 487, 417, 400],
                7: [1075, 380, 378, 376, 368, 380, 370, 382, 407, 418, 396, 400, 394, 403, 443, 419, 425, 393, 394, 391, 405, 410, 409, 416, 409, 422, 422, 451, 489, 438, 433, 436, 491, 468, 451, 448, 452, 452, 444, 452, 441, 441, 441, 446, 443, 449, 453, 449, 468, 469, 473, 475, 482, 503, 498, 490, 562, 489, 522, 499, 484, 472, 482, 485, 482, 491, 486, 473, 483, 496, 492, 502, 536, 536, 540, 547, 564, 576, 588, 7564, 458, 486, 460, 477, 462, 492, 564, 476, 511, 461, 468, 7373, 490, 446, 457, 448, 431, 430, 440, 420],
                8: [1165, 475, 478, 480, 454, 431, 512, 499, 423, 437, 425, 468, 466, 484, 443, 438, 444, 433, 455, 435, 538, 490, 679, 605, 562, 546, 516, 532, 487, 522, 498, 542, 537, 555, 502, 521, 496, 523, 504, 524, 528, 572, 525, 563, 551, 523, 544, 496, 523, 491, 540, 494, 585, 544, 588, 556, 627, 600, 531, 572, 607, 652, 621, 608, 615, 546, 603, 597, 517, 541, 553, 545, 577, 606, 632, 552, 573, 522, 585, 4126, 548, 529, 551, 513, 525, 505, 521, 523, 518, 7252, 512, 534, 519, 491, 521, 512, 530, 497, 575, 571],
                9: [1087, 431, 466, 512, 478, 483, 477, 443, 485, 478, 479, 484, 489, 508, 492, 507, 506, 502, 509, 504, 508, 518, 512, 551, 571, 520, 527, 531, 528, 497, 508, 498, 536, 509, 544, 554, 548, 552, 577, 546, 536, 531, 603, 579, 555, 542, 544, 563, 538, 525, 542, 533, 551, 572, 566, 661, 594, 596, 555, 601, 636, 646, 608, 755, 602, 584, 609, 533, 620, 568, 586, 572, 559, 539, 567, 553, 553, 593, 618, 521, 565, 7388, 535, 531, 532, 592, 552, 554, 545, 559, 549, 542, 539, 7257, 473, 472, 506, 505, 505, 497],
                10: [1096, 455, 475, 462, 456, 460, 480, 469, 466, 477, 472, 537, 539, 490, 499, 518, 494, 510, 492, 496, 520, 572, 559, 537, 526, 538, 577, 522, 522, 532, 545, 565, 578, 595, 601, 550, 549, 534, 575, 557, 542, 546, 539, 551, 557, 557, 563, 543, 573, 564, 591, 613, 599, 569, 578, 593, 620, 578, 639, 605, 589, 570, 579, 568, 596, 575, 578, 562, 668, 597, 604, 600, 648, 657, 580, 575, 558, 572, 559, 579, 551, 585, 559, 598, 7657, 527, 616, 527, 526, 550, 528, 540, 531, 541, 639, 606, 7263, 545, 508, 511],
                11: [1095, 502, 508, 510, 503, 509, 514, 524, 551, 553, 818, 602, 568, 575, 584, 645, 632, 842, 755, 726, 692, 763, 868, 762, 675, 636, 612, 706, 651, 616, 610, 616, 613, 590, 570, 586, 581, 596, 592, 593, 594, 612, 616, 722, 676, 638, 657, 647, 637, 630, 634, 635, 635, 652, 681, 637, 658, 634, 692, 631, 737, 688, 624, 652, 653, 625, 618, 618, 638, 634, 714, 772, 742, 668, 736, 730, 779, 736, 680, 635, 658, 636, 632, 635, 626, 695, 695, 7348, 565, 580, 575, 587, 579, 611, 587, 596, 587, 584, 4108, 543],
                12: [2069, 556, 546, 540, 554, 583, 546, 552, 550, 590, 563, 613, 612, 633, 608, 585, 579, 577, 588, 637, 615, 601, 588, 643, 659, 655, 627, 681, 677, 647, 657, 647, 644, 631, 640, 643, 635, 718, 637, 630, 646, 631, 638, 642, 715, 695, 687, 711, 697, 668, 649, 660, 716, 687, 762, 674, 649, 667, 654, 754, 703, 681, 693, 684, 660, 709, 660, 644, 667, 668, 659, 666, 654, 717, 675, 745, 742, 696, 681, 4148, 651, 645, 659, 647, 630, 638, 716, 660, 691, 7323, 600, 605, 639, 659, 637, 614, 609, 626, 607, 629],
            }
        }
    }
}


def get_data(generation=True):
    log_file = './twins-microbench.log'
    fname = os.path.abspath(log_file)
    data = open(fname).read()
    if generation:
        timings = ''.join(re.findall(
            r'The total time elapsed for the "generation" is: [0-9]* ms', data)
        )
    else:
        timings = ''.join(re.findall(
            r'Time elapsed for execution only is: [0-9]* ms', data)
        )
    timings = re.findall(r'\d+', timings)
    return [int(t) for t in timings]


data = get_data(generation=False)
print(f'\nNEW DATA [{len(data)==10}]: {data}\n')


# Print
def print_measurements(values, measure='y-filter'):
    print(f'{measure.capitalize()} \t mean \t\t\t std')
    for y, data in values.items():
        if len(data) > 1:
            mean, std = round(st.mean(data)), round(st.stdev(data))
            mean = datetime.timedelta(milliseconds=mean)
            std = datetime.timedelta(milliseconds=std)
            print(f'{y} \t\t {mean} \t {std}')


print('\nTimings for generator:')
for rounds, values in generator_2_partitions['rounds'].items():
    print(
        f'\n{DEFAULT_NODES} nodes, {DEFAULT_PARTITIONS} partitions, {rounds} rounds'
    )
    print_measurements(values['y-filter'], measure='Y (2 partitions)')

print('\nTimings for generator:')
for rounds, values in generator_3_partitions['rounds'].items():
    print(f'\n{DEFAULT_NODES} nodes, 3 partitions, {rounds} rounds')
    print_measurements(values['y-filter'], measure='Y (3 partitions)')

print('\nTimings for executor:')
for nodes, values in executor_2_partitions['nodes'].items():
    print(f'\n{nodes} nodes, {DEFAULT_PARTITIONS} partitions')
    print_measurements(values['rounds'], measure='rounds')

print('\nTimings for executor:')
for nodes, values in executor_3_partitions['nodes'].items():
    print(f'\n{nodes} nodes, 3 partitions')
    print_measurements(values['rounds'], measure='rounds')


# Plot
def plot_generator(values, rounds, measure='number of test cases'):
	x_values = [x**rounds for x in list(values.keys())]
	y_values = [round(st.mean(data)) for data in values.values() if len(data) > 1]
	if len(x_values) != len(y_values):
		return
	plt.plot(x_values, y_values, 'k-')
	plt.plot(x_values, y_values, 'ko')
	plt.xlabel(measure)
	plt.ylabel('time (ms)')
	plt.savefig(f'generator-{DEFAULT_PARTITIONS}-{DEFAULT_NODES}-{rounds}.pdf')
	plt.clf()


def plot_executor(measure='number of rounds'):

	# Print data for 4 nodes
	values = list(executor_2_partitions['nodes'].values())[0]
	values = values['rounds']
	x_values = list(values.keys())
	y_values = [round(st.mean(data)) for data in values.values() if len(data) > 1]
	y_err = [round(st.stdev(data)) for data in values.values() if len(data) > 2]
	plt.errorbar(x_values, y_values, yerr=y_err, uplims=True, lolims=True,
		label='4 nodes', marker='.', alpha=1, dashes=None)


	# Print data for 7 nodes
	values = list(executor_2_partitions['nodes'].values())[1]
	values = values['rounds']
	x_values = list(values.keys())
	y_values = [round(st.mean(data)) for data in values.values() if len(data) > 1]
	y_err = [round(st.stdev(data)) for data in values.values() if len(data) > 2]
	plt.errorbar(x_values, y_values, yerr=y_err, uplims=True, lolims=True,
		label='7 nodes', marker='.', alpha=1, dashes=None)

	plt.xlabel(measure)
	plt.ylabel('time (ms)')
	plt.ylim(0, 850)
	plt.legend(loc='upper left', frameon=False)
	plt.savefig(f'executor-{DEFAULT_PARTITIONS}-*-*.pdf')
	plt.clf() # comment to get both plots on the same figure


for rounds, values in generator_2_partitions['rounds'].items():
	plot_generator(values['y-filter'], rounds)

#for nodes, values in executor_2_partitions['nodes'].items():
plot_executor()
